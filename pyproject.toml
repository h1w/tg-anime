[project]
name = "tg-anime"
version = "0.1.0"
description = "Telegram bot for anime things."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiogram-dialog>=2.2.0",
    "aiogram>=3.15.0",
    "fastapi[standard]>=0.115.6",
    "pydantic-settings>=2.7.0",
    "uvicorn>=0.32.1",
    "sqlalchemy>=2.0.36",
    "asyncpg>=0.30.0",
    "dishka>=1.4.2",
    "redis>=5.2.1",
    "alembic>=1.14.0",
    "orjson>=3.10.12",
    "aiohttp>=3.10.11",
]

[tool.uv]
dev-dependencies = [
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "ruff>=0.8.3",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bufbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "B904", # syntax error
    # "C901", # too complex
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # allow imported but unused for __init__.py

[tool.ruff.lint.isort]
# known-first-party = ["api", "core", "domain", "infrastructure", "dependencies", "utils", "tests"]
known-third-party = ["dishka"]

[tool.ruff.lint.pyupgrade]
# Preserve types, event if a file imports `from __future__ import annotations`
keep-runtime-typing = true
